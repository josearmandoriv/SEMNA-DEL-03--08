#include <stdio.h>
#include <string.h>
#define MAXLINES 5000 /* máx # de líneas por ordenar */
char *lineptr[MAXLINES]; /* apuntadores a líneas de texto */
int readlines(char *lineptr[ ], int nlines);
void writelines(char *lineptr[ ], int nlines);
void qsort(char *lineptr[ ], int left, int right);
/* ordena líneas de entrada */
main( )
{
	int nlines; /* número de líneas de entrada leídas */
if ((nlines = readlines(lineptr, MAXLINES)) >= 0) {
qsort(lineptr, 0, nlines-1);
writelines(lineptr, nlines);
return 0;
} else {
printf("error: entrada demasiado grande para ordenarla \n"); 
return 1 ;
}
}
#define MAXLEN 1000 /* máx longitud de cualquier línea de entrada*/
int getline(char *, int);
char *alloc(int);
/* readlines: lee líneas de entrada */
int readlines(char *lineptr[ ], int maxlines)
{
int len, nlines;
char *p, line[MAXLEN];
nlines = 0;
while ((len = getline(line, MAXLEN)) > 0)
if (nlines >= maxlines || (p = alloc(len)) == NULL)
return -1;
else {
line[len-1] ='\0'; /* elimina carácter nueva línea */
strcpy(p, line);
lineptr [nlines++];
}
return nlines;
}
/* writelines: escribe líneas de salida */
void writelines(char *lineptr[ ], int nlines)
{
int i;
for (i=0 ; i<nlines; i++)
printf("%s\n", lineptr [i]);
}
